/**
* Copyright 2012 Illumina
* 
 * Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*    http://www.apache.org/licenses/LICENSE-2.0
* 
 *  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*/

package com.illumina.basespace;

/**
 * Configuration information for a BaseSpace session. These values are necessary to perform
 * authentication and form the URIs necessary to communicate with BaseSpace via REST API
 * @author bking
 *
 */
public interface BaseSpaceConfiguration
{
    /**
     * Get the desired version of BaseSpace to operate against
     * @return the version of BaseSpace 
     */
    public String getVersion();
 
    /**
     * Get the client ID generated by BaseSpace for an application 
     * @return the client id
     */
    public String getClientId();
   
    /**
     * Get the client secret for the client ID 
     * @return the client secret
     */
    public String getClientSecret();
   
    /**
     * Get the root URI for the BaseSpace API
     * @return the API root URI
     */
    public String getApiRootUri();
   
    /**
     * Get the URI fragment for requesting authorization code
     * @return authorization URI
     */
    public String getAuthTokenUriFragment();
    
    /**
     * Get the URI fragment for requesting authorization token
     * @return authorization token URI
     */
    public String getAuthorizationUri();
    
    /**
     * Port for the internal Http server that will receive auth code
     * @return the port
     */
    public int getAuthCodeListenerPort();
    
    /**
     * The amount of time in seconds the internal Http server will wait for 
     * authorization before timing out
     * @return the timeout in seconds
     */
    public int getAuthCodeListenerTimeout();
}
